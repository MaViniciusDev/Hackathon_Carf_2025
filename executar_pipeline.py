"""
Script Master: Executa todo o pipeline do CARF
1. Previs√£o de HET (Ridge Regression)
2. Organiza√ß√£o de Lotes (simples, sem ML complexo)
3. Distribui√ß√£o para Turmas
4. An√°lise de Desempenho (opcional, apenas se houver dados de monitoramento)
"""

import sys
from pathlib import Path

# Adicionar src ao path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

print("\n" + "="*80)
print("PIPELINE COMPLETO - SISTEMA CARF")
print("="*80 + "\n")

# Importar e executar previs√£o de HET
print("\n" + "-" * 80)
print("FASE 1: PREVIS√ÉO DE HET")
print("-" * 80)

from src.previsao_het import PrevisaoHET
previsao = PrevisaoHET()
previsao.executar()

# Importar e executar organiza√ß√£o de lotes
print("\n" + "-" * 80)
print("FASE 2: ORGANIZA√á√ÉO DE LOTES")
print("-" * 80)

from src.organizar_lotes import OrganizadorLotes
organizador = OrganizadorLotes()
organizador.executar()

# Verificar se existe dados de monitoramento para an√°lise de desempenho
arquivo_monitoramento = Path('output/Monitoramento_Processos.xlsx')
if arquivo_monitoramento.exists():
    print("\n" + "-" * 80)
    print("FASE 3: AN√ÅLISE DE DESEMPENHO")
    print("-" * 80)
    
    from src.analise_desempenho import AnaliseDesempenho
    analise = AnaliseDesempenho()
    analise.executar()
else:
    print("\n" + "-" * 80)
    print("FASE 3: AN√ÅLISE DE DESEMPENHO (AGUARDANDO DADOS)")
    print("-" * 80)
    print("‚ö†Ô∏è  Nenhum dado de monitoramento encontrado")
    print("   Para gerar an√°lise de desempenho:")
    print("   1. Use a API de monitoramento para registrar processos")
    print("   2. Execute novamente o pipeline ap√≥s ter processos conclu√≠dos")

print("\n" + "="*80)
print("PIPELINE EXECUTADO COM SUCESSO!")
print("="*80)

print("\nüìÅ Arquivos gerados:")
print("   1. output/Processos_com_HET.xlsx - Processos com HET previsto")
print("   2. output/Processos_Categorizados.xlsx - Processos organizados")
print("   3. output/Lotes_para_Turmas.csv - Lotes distribu√≠dos")
print("   4. output/Mapeamento_Parametros.csv - C√≥digos ‚Üí Nomes")
print("   5. models/ridge_model.pkl - Modelo treinado")
if arquivo_monitoramento.exists():
    print("   6. output/Ranking_Analistas.xlsx - Ranking de analistas")
    print("   7. output/Ranking_Turmas.xlsx - Ranking de turmas")
    print("   8. output/dashboard_*.json - Dashboards individuais")
print()
